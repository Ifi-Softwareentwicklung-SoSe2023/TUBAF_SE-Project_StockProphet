@startuml Project Model Class Diagram

skin rose

title Stock Prophet Class Diagram


package StockProphetLib {

    class StockProphet {
        -Terminal: Terminal
        -Articles: List<Article>
        -Handlers: List<IArticleHandler>
        +Prophesy(string keyword): void
        -StartTasks(): void
    }
    StockProphet --> WebCollectorLib.LinkCollector
    StockProphet --> Collector
    StockProphet --> PreProcessor
    StockProphet --> Evaluator
    

    interface IArticleHandler {
        +Run(Article): void
    }


    class Collector {
        -ContentExtractor: RawToContent
    }
    Collector --|> IArticleHandler
    Collector --> WebCollectorLib.RawCollector
    Collector --> WebCollectorLib.RawToContent
    

    class PreProcessor {
        -Clean(): void
        -Seperate(): void
    }
    PreProcessor --|> IArticleHandler
    PreProcessor --> WebCollectorLib.ContentFilter


    class Evaluator {
        -SentimentEval: ISentiment
        -EvaluateParagraph(string): float
    }
    Evaluator --|> IArticleHandler
    Evaluator --> SentimentEvalLib.ISentiment


    class Article {
        +ID: int
        +Link: string
        +Title: string
        +Content: string
    }


    class Terminal {
        -StatusTemplate: string
        +PrintStatus(): void
        -ResultTemplate: string
        +PrintResult(): void
    }
}


package WebCollectorLib 
{
    class LinkCollector {
        -Keyword: string
        +DownloadLinks(): List<string>
    }
    LinkCollector -down-> RawToLinks
    LinkCollector -right-> RawCollector


    class RawCollector {
        {static} +GetRaw(string link): string
    }


    class RawToLinks {
        +GetLinks(string Link, string Raw): List<string>
        -Website1_Link(string Raw): List<string>
        -Website2_Link(string Raw): List<string>
        -Website3_Link(string Raw): List<string>
    }
   

    class RawToContent {
        +GetContent(string Link, string Raw): List<string>
        -Website1_Text(string Raw): string
        -Website2_Text(string Raw): string
        -Website3_Text(string Raw): string
    }


    class ContentFilter {
        {static} +removeAuthors()
        {static} +removeCharacters()
        {static} +replaceCharacters()
    }
}


package SentimentEvalLib 
{
    interface ISentiment {
        +LoadModel(string Path): void
        +Evaluate(SentimentData Data): SentimentPrediction
    }

    interface ISentimentTrain {
        +TrainModel(string Path): void
        +SaveModel(string Path): void
    }
    
    class SentimentEvaluator {
        -MlContext: MLContext
        -Schema: DataViewSchema
        -Model: ITransformer
        -InferenceFunction: PredictionEngine<,>
    }
    SentimentEvaluator --|> ISentiment
    SentimentEvaluator --|> ISentimentTrain

    class SentimentData {
        +Text: string
        +Sentiment: bool
    }

    class SentimentPrediction {
        +Prediction: bool
        +Probability: float
    }
    SentimentPrediction --|> SentimentData
}


@enduml
