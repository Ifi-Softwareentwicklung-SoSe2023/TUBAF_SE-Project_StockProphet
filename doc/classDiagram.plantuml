@startuml Project Model Class Diagram

skin rose

title Stock Prophet Application


package StockProphetLib {

    class StockProphet << (S,#FF7700) Singleton >> {
        -Links: List<string>
        -LinkCollector: LinkCollector
        -Collector: Collector
        -PreProcessor: PreProcessor
        -Evaluator: Evaluator
        +Run(): void
    }
    StockProphet --> WebCollectorLib.LinkCollector
    StockProphet --> Collector
    StockProphet --> PreProcessor
    StockProphet --> Evaluator

    abstract ProcessingStep {
        -Article: Article
        +Run(Article): void
    }
    ProcessingStep --> Article


    class Collector {
        -ContentCollector: ContentCollector
        -GetLinks(): void
        -GetArticles(): void
    }
    Collector --|> ProcessingStep
    Collector --> WebCollectorLib.ContentCollector


    class PreProcessor {
        -RemoveAuthors(): void
    }
    PreProcessor --|> ProcessingStep


    class Evaluator {
        -SentimentEval: ISentiment
        -EvaluateParagraph(string): float
    }
    Evaluator --|> ProcessingStep
    Evaluator --> SentimentEvalLib.ISentiment


    class Article {
        +ID: int
        +Link: string
        +Title: string
        +Content: string
    }
}


package UserInterface 
{    
    class Console {
        +GetRequest(): string
        +Update(): void
        +PrintResult(): void
    }
}


package WebCollectorLib 
{
    class LinkCollector {
        -Keyword: string
        +Links: List<string>
        +LinkCollector(string keyword)
        +FindLinks(): void
        +FilterLinks(): void
    }

    class ContentCollector {
        {static} +Download(string Link): string
    }
}


package SentimentEvalLib 
{
    interface ISentiment {
        +LoadModel(string Path): void
        +Evaluate(string Paragraph): float
    }

    interface ISentimentTrain {
        +LoadData(string Path): void
        +CreateModel(): void
        +Fit(): void
        +Test(): void
        +SaveModel(string Path):void
    }
    
    class SentimentEvaluator {
        -MlContext: MLContext
        -SplitDataView: TrainTestData
        -Model: ITransformer
    }
    SentimentEvaluator --|> ISentiment
    SentimentEvaluator --|> ISentimentTrain
}


@enduml