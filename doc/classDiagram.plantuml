@startuml Project Model Class Diagram

skin rose

title Stock Prophet Application


package StockProphetLib {

    class StockProphet {
        -Terminal: Terminal
        -Links: List<string>
        -LinkCollector: LinkCollector
        -Handlers: IArticleHandler
        +Prophesy(string keyword): void
        -StartTasks(): void
    }
    StockProphet <--> WebCollectorLib.CollectorProgram
    StockProphet --> Collector
    StockProphet --> PreProcessor
    StockProphet --> Evaluator
    CollectorProgram --> WebCollectorLib.LinkCollector

    interface IArticleHandler {
        +Run(Article): void
    }


    class Collector {
        -ContentCollector: ContentCollector
        -GetLinks(): void
        -GetArticles(): void
    }
    Collector --|> IArticleHandler
    Collector --> WebCollectorLib.ContentCollector
    Collector <--> WebCollectorLib.CollectorProgram
    CollectorProgram --> WebCollectorLib.ContentCollector

    class PreProcessor {
        -RemoveAuthors(): void
    }
    PreProcessor --|> IArticleHandler


    class Evaluator {
        -SentimentEval: ISentiment
        -EvaluateParagraph(string): float
    }
    Evaluator --|> IArticleHandler
    Evaluator --> SentimentEvalLib.ISentiment


    class Article {
        +ID: int
        +Link: string
        +Title: string
        +Content: string
    }


    class Terminal {
        -StatusTemplate: string
        +PrintStatus(): void
        -ResultTemplate: string
        +PrintResult(): void
    }
}


package WebCollectorLib 
{
    class CollectorProgram {
        +Main(args: string[]): Task
    }

    class LinkCollector {
    
        -Keyword: string
        +Links: List<string>
        +LinkCollector(string keyword)
        +FindLinks(): void
        +FilterLinks(): void
        
        +DownloadLinks(articleUrl: string): Task<string[]>
        
    }

    class ContentCollector {
         +Download(string Link): string
         +ExtractParagraphsFromLinks(inputFile: string, outputFile: string): Task
         
    }
  CollectorProgram --> LinkCollector
  CollectorProgram --> ContentCollector
}


package SentimentEvalLib 
{
    interface ISentiment {
        +LoadModel(string Path): void
        +Evaluate(SentimentData): SentimentPrediction
    }

    interface ISentimentTrain {
        +LoadData(string Path): void
        +CreateModel(): void
        +Fit(): void
        +Test(): void
        +SaveModel(string Path):void
    }
    
    class SentimentEvaluator {
        -MlContext: MLContext
        -SplitDataView: TrainTestData
        -Model: ITransformer
    }
    SentimentEvaluator --|> ISentiment
    SentimentEvaluator --|> ISentimentTrain

    class SentimentData {
        +Text: string
        +Sentiment: bool
    }

    class SentimentPrediction {
        +Prediction: bool
        +Probability: float
    }
    SentimentPrediction --|> SentimentData
}

@enduml
